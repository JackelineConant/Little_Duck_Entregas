
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'program( ) * + , - / : ; < = > CONST_FLOAT CONST_FLOAT CONST_INT CONST_INT CONST_STRING DO ELSE END EQ FOR GE ID IF LE MAIN NE PRINT PROGRAM STRING THEN VAR VOID WHILE [ ] { }empty :type : CONST_INTtype : CONST_FLOATvars : VAR var_ayuda\n| vars VAR var_ayudavar_ayuda : ID var_doble_ayuda ":" type ";" var_ayuda_tailvar_ayuda_tail : var_ayudavar_ayuda_tail : emptyvar_doble_ayuda : "," ID var_doble_ayudavar_doble_ayuda : emptyexp : exp "+" terminoexp : exp "-" terminoexp : terminoexpression : exp ">" expexpression : exp "<" expexpression : exp EQ expexpression : exp GE expexpression : exp LE expexpression : exp NE expexpression : expfactor : "(" expression ")"factor : IDfactor : ctefactor : "+" IDfactor : "-" IDfactor : "+" ctefactor : "-" cteprint : PRINT "(" expression print_ayuda ")" ";"print : PRINT "(" STRING print_ayuda ")" ";"print_ayuda : "," expression print_ayudaprint_ayuda : "," STRING print_ayudaprint_ayuda : emptytermino : termino "*" factortermino : termino "/" factortermino : factorcycle : DO body WHILE "(" expression ")" ";"condition : IF "(" expression ")" body ";"condition : IF "(" expression ")" body ELSE body ";"assign : ID "=" expression ";"f_call : ID "(" expression f_call_ayuda ")" ";"f_call : ID "(" ")" ";"f_call_ayuda : "," expression f_call_ayudaf_call_ayuda : emptystatements : statements statementstatements : statementstatement : assignstatement : conditionstatement : cyclestatement : f_callstatement : printbody : "{" statements "}"cte : CONST_INTcte : CONST_FLOATfuncs : VOID ID "(" ID ":" type funcs_ayuda ")" "[" vars body "]" ";"funcs : VOID ID "(" ")" "[" vars body "]" ";"funcs : VOID ID "(" ID ":" type funcs_ayuda ")" "[" body "]" ";"funcs : VOID ID "(" ")" "[" body "]" ";"funcs : funcs funcsfuncs : emptyfuncs_ayuda : "," ID ":" type funcs_ayudafuncs_ayuda : emptyprogram : PROGRAM ID ";" vars funcs MAIN body END'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,25,],[0,-62,]),'ID':([2,6,8,9,18,21,22,26,27,28,29,30,31,32,44,45,46,47,49,52,56,58,60,76,77,78,79,80,81,82,83,84,87,88,93,95,97,99,103,130,132,135,138,143,147,],[3,12,12,16,24,33,37,33,-45,-46,-47,-48,-49,-50,-44,53,53,53,53,12,85,89,53,-39,53,53,53,53,53,53,53,53,53,53,53,-41,53,53,127,-40,-37,-28,-29,-36,-38,]),';':([3,39,40,41,43,53,54,55,57,59,61,62,63,65,85,86,89,90,106,107,108,109,110,111,112,113,114,115,116,117,118,120,122,125,128,134,142,149,151,],[4,52,-2,-3,-51,-22,76,-20,-13,-35,-23,-52,-53,95,-24,-26,-25,-27,129,-14,-15,-16,-17,-18,-19,-11,-12,-33,-34,-21,130,132,135,138,141,143,147,152,153,]),'VAR':([4,5,11,15,51,52,71,73,74,75,139,144,],[6,8,-4,-5,6,-1,8,-6,-7,-8,6,8,]),'VOID':([5,7,10,11,13,15,52,73,74,75,129,141,152,153,],[9,9,-59,-4,9,-5,-1,-6,-7,-8,-57,-55,-56,-54,]),'MAIN':([5,7,10,11,13,15,52,73,74,75,129,141,152,153,],[-1,14,-59,-4,-1,-5,-1,-6,-7,-8,-57,-55,-56,-54,]),'{':([11,14,15,35,51,52,71,73,74,75,96,133,139,144,],[-4,21,-5,21,21,-1,21,-6,-7,-8,21,21,21,21,]),',':([12,24,40,41,53,55,57,59,61,62,63,64,68,69,70,85,86,89,90,107,108,109,110,111,112,113,114,115,116,117,119,123,124,146,],[18,18,-2,-3,-22,-20,-13,-35,-23,-52,-53,93,99,99,103,-24,-26,-25,-27,-14,-15,-16,-17,-18,-19,-11,-12,-33,-34,-21,93,99,99,103,]),':':([12,17,19,24,37,42,127,],[-1,23,-10,-1,50,-9,140,]),'(':([16,33,34,36,45,46,47,49,60,67,77,78,79,80,81,82,83,84,87,88,93,97,99,],[22,46,47,49,60,60,60,60,60,97,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'END':([20,43,],[25,-51,]),'IF':([21,26,27,28,29,30,31,32,44,76,95,130,132,135,138,143,147,],[34,34,-45,-46,-47,-48,-49,-50,-44,-39,-41,-40,-37,-28,-29,-36,-38,]),'DO':([21,26,27,28,29,30,31,32,44,76,95,130,132,135,138,143,147,],[35,35,-45,-46,-47,-48,-49,-50,-44,-39,-41,-40,-37,-28,-29,-36,-38,]),'PRINT':([21,26,27,28,29,30,31,32,44,76,95,130,132,135,138,143,147,],[36,36,-45,-46,-47,-48,-49,-50,-44,-39,-41,-40,-37,-28,-29,-36,-38,]),')':([22,40,41,46,53,55,57,59,61,62,63,64,66,68,69,70,85,86,89,90,91,92,94,98,100,101,102,104,107,108,109,110,111,112,113,114,115,116,117,119,121,123,124,131,136,137,146,150,],[38,-2,-3,65,-22,-20,-13,-35,-23,-52,-53,-1,96,-1,-1,-1,-24,-26,-25,-27,117,118,-43,122,-32,125,126,-61,-14,-15,-16,-17,-18,-19,-11,-12,-33,-34,-21,-1,134,-1,-1,-42,-30,-31,-1,-60,]),'CONST_INT':([23,45,46,47,49,50,56,58,60,77,78,79,80,81,82,83,84,87,88,93,97,99,140,],[40,62,62,62,62,40,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,40,]),'CONST_FLOAT':([23,45,46,47,49,50,56,58,60,77,78,79,80,81,82,83,84,87,88,93,97,99,140,],[41,63,63,63,63,41,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,41,]),'}':([26,27,28,29,30,31,32,44,76,95,130,132,135,138,143,147,],[43,-45,-46,-47,-48,-49,-50,-44,-39,-41,-40,-37,-28,-29,-36,-38,]),'=':([33,],[45,]),'[':([38,126,],[51,139,]),'WHILE':([43,48,],[-51,67,]),']':([43,72,105,145,148,],[-51,106,128,149,151,]),'ELSE':([43,120,],[-51,133,]),'+':([45,46,47,49,53,55,57,59,60,61,62,63,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,107,108,109,110,111,112,113,114,115,116,117,],[56,56,56,56,-22,83,-13,-35,56,-23,-52,-53,56,56,56,56,56,56,56,56,-24,-26,56,56,-25,-27,56,56,56,83,83,83,83,83,83,-11,-12,-33,-34,-21,]),'-':([45,46,47,49,53,55,57,59,60,61,62,63,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,107,108,109,110,111,112,113,114,115,116,117,],[58,58,58,58,-22,84,-13,-35,58,-23,-52,-53,58,58,58,58,58,58,58,58,-24,-26,58,58,-25,-27,58,58,58,84,84,84,84,84,84,-11,-12,-33,-34,-21,]),'STRING':([49,99,],[69,124,]),'*':([53,57,59,61,62,63,85,86,89,90,113,114,115,116,117,],[-22,87,-35,-23,-52,-53,-24,-26,-25,-27,87,87,-33,-34,-21,]),'/':([53,57,59,61,62,63,85,86,89,90,113,114,115,116,117,],[-22,88,-35,-23,-52,-53,-24,-26,-25,-27,88,88,-33,-34,-21,]),'>':([53,55,57,59,61,62,63,85,86,89,90,113,114,115,116,117,],[-22,77,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'<':([53,55,57,59,61,62,63,85,86,89,90,113,114,115,116,117,],[-22,78,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'EQ':([53,55,57,59,61,62,63,85,86,89,90,113,114,115,116,117,],[-22,79,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'GE':([53,55,57,59,61,62,63,85,86,89,90,113,114,115,116,117,],[-22,80,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'LE':([53,55,57,59,61,62,63,85,86,89,90,113,114,115,116,117,],[-22,81,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'NE':([53,55,57,59,61,62,63,85,86,89,90,113,114,115,116,117,],[-22,82,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,51,139,],[5,71,144,]),'funcs':([5,7,13,],[7,13,13,]),'empty':([5,7,12,13,24,52,64,68,69,70,119,123,124,146,],[10,10,19,10,19,75,94,100,100,104,94,100,100,104,]),'var_ayuda':([6,8,52,],[11,15,74,]),'var_doble_ayuda':([12,24,],[17,42,]),'body':([14,35,51,71,96,133,139,144,],[20,48,72,105,120,142,145,148,]),'statements':([21,],[26,]),'statement':([21,26,],[27,44,]),'assign':([21,26,],[28,28,]),'condition':([21,26,],[29,29,]),'cycle':([21,26,],[30,30,]),'f_call':([21,26,],[31,31,]),'print':([21,26,],[32,32,]),'type':([23,50,140,],[39,70,146,]),'expression':([45,46,47,49,60,93,97,99,],[54,64,66,68,91,119,121,123,]),'exp':([45,46,47,49,60,77,78,79,80,81,82,93,97,99,],[55,55,55,55,55,107,108,109,110,111,112,55,55,55,]),'termino':([45,46,47,49,60,77,78,79,80,81,82,83,84,93,97,99,],[57,57,57,57,57,57,57,57,57,57,57,113,114,57,57,57,]),'factor':([45,46,47,49,60,77,78,79,80,81,82,83,84,87,88,93,97,99,],[59,59,59,59,59,59,59,59,59,59,59,59,59,115,116,59,59,59,]),'cte':([45,46,47,49,56,58,60,77,78,79,80,81,82,83,84,87,88,93,97,99,],[61,61,61,61,86,90,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'var_ayuda_tail':([52,],[73,]),'f_call_ayuda':([64,119,],[92,131,]),'print_ayuda':([68,69,123,124,],[98,101,136,137,]),'funcs_ayuda':([70,146,],[102,150,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',19),
  ('type -> CONST_INT','type',1,'p_type_int','parser.py',24),
  ('type -> CONST_FLOAT','type',1,'p_type_float','parser.py',28),
  ('vars -> VAR var_ayuda','vars',2,'p_vars','parser.py',33),
  ('vars -> vars VAR var_ayuda','vars',3,'p_vars','parser.py',34),
  ('var_ayuda -> ID var_doble_ayuda : type ; var_ayuda_tail','var_ayuda',6,'p_var_ayuda','parser.py',41),
  ('var_ayuda_tail -> var_ayuda','var_ayuda_tail',1,'p_var_ayuda_tail','parser.py',45),
  ('var_ayuda_tail -> empty','var_ayuda_tail',1,'p_var_ayuda_tail_empty','parser.py',49),
  ('var_doble_ayuda -> , ID var_doble_ayuda','var_doble_ayuda',3,'p_var_doble_ayuda','parser.py',53),
  ('var_doble_ayuda -> empty','var_doble_ayuda',1,'p_var_doble_ayuda_empty','parser.py',57),
  ('exp -> exp + termino','exp',3,'p_exp_add','parser.py',62),
  ('exp -> exp - termino','exp',3,'p_exp_sub','parser.py',66),
  ('exp -> termino','exp',1,'p_exp_term','parser.py',70),
  ('expression -> exp > exp','expression',3,'p_expression_gt','parser.py',75),
  ('expression -> exp < exp','expression',3,'p_expression_lt','parser.py',79),
  ('expression -> exp EQ exp','expression',3,'p_expression_eq','parser.py',83),
  ('expression -> exp GE exp','expression',3,'p_expression_ge','parser.py',87),
  ('expression -> exp LE exp','expression',3,'p_expression_le','parser.py',91),
  ('expression -> exp NE exp','expression',3,'p_expression_ne','parser.py',95),
  ('expression -> exp','expression',1,'p_expression_exp','parser.py',99),
  ('factor -> ( expression )','factor',3,'p_factor_group','parser.py',104),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',108),
  ('factor -> cte','factor',1,'p_factor_cte','parser.py',112),
  ('factor -> + ID','factor',2,'p_factor_pos_id','parser.py',116),
  ('factor -> - ID','factor',2,'p_factor_neg_id','parser.py',120),
  ('factor -> + cte','factor',2,'p_factor_pos_cte','parser.py',124),
  ('factor -> - cte','factor',2,'p_factor_neg_cte','parser.py',128),
  ('print -> PRINT ( expression print_ayuda ) ;','print',6,'p_print_expr','parser.py',133),
  ('print -> PRINT ( STRING print_ayuda ) ;','print',6,'p_print_string','parser.py',137),
  ('print_ayuda -> , expression print_ayuda','print_ayuda',3,'p_print_ayuda_expr','parser.py',141),
  ('print_ayuda -> , STRING print_ayuda','print_ayuda',3,'p_print_ayuda_string','parser.py',145),
  ('print_ayuda -> empty','print_ayuda',1,'p_print_ayuda_empty','parser.py',149),
  ('termino -> termino * factor','termino',3,'p_termino_mul','parser.py',153),
  ('termino -> termino / factor','termino',3,'p_termino_div','parser.py',157),
  ('termino -> factor','termino',1,'p_termino_factor','parser.py',161),
  ('cycle -> DO body WHILE ( expression ) ;','cycle',7,'p_cycle','parser.py',167),
  ('condition -> IF ( expression ) body ;','condition',6,'p_condition_if','parser.py',172),
  ('condition -> IF ( expression ) body ELSE body ;','condition',8,'p_condition_if_else','parser.py',176),
  ('assign -> ID = expression ;','assign',4,'p_assign','parser.py',181),
  ('f_call -> ID ( expression f_call_ayuda ) ;','f_call',6,'p_f_call_args','parser.py',186),
  ('f_call -> ID ( ) ;','f_call',4,'p_f_call_no_args','parser.py',190),
  ('f_call_ayuda -> , expression f_call_ayuda','f_call_ayuda',3,'p_f_call_ayuda','parser.py',194),
  ('f_call_ayuda -> empty','f_call_ayuda',1,'p_f_call_ayuda_empty','parser.py',198),
  ('statements -> statements statement','statements',2,'p_statements_multiple','parser.py',203),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',207),
  ('statement -> assign','statement',1,'p_statement_assign','parser.py',211),
  ('statement -> condition','statement',1,'p_statement_condition','parser.py',215),
  ('statement -> cycle','statement',1,'p_statement_cycle','parser.py',219),
  ('statement -> f_call','statement',1,'p_statement_f_call','parser.py',223),
  ('statement -> print','statement',1,'p_statement_print','parser.py',227),
  ('body -> { statements }','body',3,'p_body','parser.py',232),
  ('cte -> CONST_INT','cte',1,'p_cte_int','parser.py',238),
  ('cte -> CONST_FLOAT','cte',1,'p_cte_float','parser.py',242),
  ('funcs -> VOID ID ( ID : type funcs_ayuda ) [ vars body ] ;','funcs',13,'p_funcs_params','parser.py',247),
  ('funcs -> VOID ID ( ) [ vars body ] ;','funcs',9,'p_funcs_empty_params','parser.py',251),
  ('funcs -> VOID ID ( ID : type funcs_ayuda ) [ body ] ;','funcs',12,'p_funcs_params_no_vars','parser.py',255),
  ('funcs -> VOID ID ( ) [ body ] ;','funcs',8,'p_funcs_empty_params_no_vars','parser.py',259),
  ('funcs -> funcs funcs','funcs',2,'p_funcs_multiple','parser.py',263),
  ('funcs -> empty','funcs',1,'p_funcs_empty','parser.py',267),
  ('funcs_ayuda -> , ID : type funcs_ayuda','funcs_ayuda',5,'p_funcs_ayuda','parser.py',271),
  ('funcs_ayuda -> empty','funcs_ayuda',1,'p_funcs_ayuda_empty','parser.py',275),
  ('program -> PROGRAM ID ; vars funcs MAIN body END','program',8,'p_program','parser.py',281),
]
