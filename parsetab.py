
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = '( ) * + , - / : ; < = > CONST_FLOAT CONST_INT CONST_STRING DO ELSE END EQ FLOAT FOR GE ID IF INT LE MAIN NE PRINT PROGRAM STRING THEN VAR VOID WHILE [ ] { }program : PROGRAM ID ";" vars funcs MAIN body ENDvars : vars VAR var_ayudavars : VAR var_ayudavar_ayuda : ID var_doble_ayuda ":" type ";" var_ayuda_tailvar_ayuda_tail : var_ayudavar_ayuda_tail :var_doble_ayuda : "," ID var_doble_ayudavar_doble_ayuda :type : INTtype : FLOATbody : "{" statements "}"statements : statements statementstatements : statementstatement : assignstatement : conditionstatement : cyclestatement : f_callstatement : printprint : PRINT "(" expression print_ayuda ")" ";"print : PRINT "(" STRING print_ayuda ")" ";"print_ayuda : "," expression print_ayudaprint_ayuda : "," STRING print_ayudaprint_ayuda :cycle : DO body WHILE "(" expression ")" ";"condition : IF "(" expression ")" body ";"condition : IF "(" expression ")" body ELSE body ";"assign : ID "=" expression ";"expression : exp ">" expexpression : exp "<" expexpression : exp EQ expexpression : exp GE expexpression : exp LE expexpression : exp NE expexpression : expexp : exp "+" terminoexp : exp "-" terminoexp : terminotermino : termino "*" factortermino : termino "/" factortermino : factorfactor : "(" expression ")"factor : IDfactor : "+" IDfactor : "-" IDfactor : "+" ctefactor : "-" ctecte : INTcte : FLOATfuncs : VOID ID "(" ID ":" type funcs_ayuda ")" "[" vars body "]" ";"funcs : VOID ID "(" ")" "[" vars body "]" ";"funcs : VOID ID "(" ID ":" type funcs_ayuda ")" "[" body "]" ";"funcs : VOID ID "(" ")" "[" body "]" ";"funcs : funcs funcsfuncs :funcs_ayuda : "," ID ":" type funcs_ayudafuncs_ayuda :f_call : ID "(" expression f_call_ayuda ")" ";"f_call : ID "(" ")" ";"f_call_ayuda : "," expression f_call_ayudaf_call_ayuda :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,23,],[0,-1,]),'ID':([2,6,8,9,17,19,20,24,25,26,27,28,29,30,42,43,44,45,47,50,54,56,58,70,71,72,73,74,75,76,77,78,83,84,89,90,92,94,97,123,125,128,131,136,140,],[3,11,11,15,22,31,35,31,-13,-14,-15,-16,-17,-18,-12,51,51,51,51,11,79,85,51,-27,51,51,51,51,51,51,51,51,51,51,51,-58,51,51,120,-57,-25,-19,-20,-24,-26,]),';':([3,37,38,39,41,51,52,53,55,57,60,79,80,81,82,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,113,115,118,121,127,135,142,144,],[4,50,-9,-10,-11,-42,70,-34,-37,-40,90,-43,-45,-47,-48,-44,-46,122,-28,-29,-30,-31,-32,-33,-35,-36,-38,-39,-41,123,125,128,131,134,136,140,145,146,]),'VAR':([4,5,10,14,49,50,66,68,69,132,137,],[6,8,-3,-2,6,-6,8,-4,-5,6,8,]),'VOID':([5,7,10,12,14,50,68,69,122,134,145,146,],[9,9,-3,9,-2,-6,-4,-5,-52,-50,-51,-49,]),'MAIN':([5,7,10,12,14,50,68,69,122,134,145,146,],[-54,13,-3,-53,-2,-6,-4,-5,-52,-50,-51,-49,]),'{':([10,13,14,33,49,50,66,68,69,91,126,132,137,],[-3,19,-2,19,19,-6,19,-4,-5,19,19,19,19,]),',':([11,22,38,39,51,53,55,57,59,63,64,65,79,80,81,82,85,86,100,101,102,103,104,105,106,107,108,109,110,112,116,117,139,],[17,17,-9,-10,-42,-34,-37,-40,89,94,94,97,-43,-45,-47,-48,-44,-46,-28,-29,-30,-31,-32,-33,-35,-36,-38,-39,-41,89,94,94,97,]),':':([11,16,22,35,40,120,],[-8,21,-8,48,-7,133,]),'(':([15,31,32,34,43,44,45,47,58,62,71,72,73,74,75,76,77,78,83,84,89,92,94,],[20,44,45,47,58,58,58,58,58,92,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'END':([18,41,],[23,-11,]),'IF':([19,24,25,26,27,28,29,30,42,70,90,123,125,128,131,136,140,],[32,32,-13,-14,-15,-16,-17,-18,-12,-27,-58,-57,-25,-19,-20,-24,-26,]),'DO':([19,24,25,26,27,28,29,30,42,70,90,123,125,128,131,136,140,],[33,33,-13,-14,-15,-16,-17,-18,-12,-27,-58,-57,-25,-19,-20,-24,-26,]),'PRINT':([19,24,25,26,27,28,29,30,42,70,90,123,125,128,131,136,140,],[34,34,-13,-14,-15,-16,-17,-18,-12,-27,-58,-57,-25,-19,-20,-24,-26,]),')':([20,38,39,44,51,53,55,57,59,61,63,64,65,79,80,81,82,85,86,87,88,93,95,96,100,101,102,103,104,105,106,107,108,109,110,112,114,116,117,124,129,130,139,143,],[36,-9,-10,60,-42,-34,-37,-40,-60,91,-23,-23,-56,-43,-45,-47,-48,-44,-46,110,111,115,118,119,-28,-29,-30,-31,-32,-33,-35,-36,-38,-39,-41,-60,127,-23,-23,-59,-21,-22,-56,-55,]),'INT':([21,48,54,56,133,],[38,38,81,81,38,]),'FLOAT':([21,48,54,56,133,],[39,39,82,82,39,]),'}':([24,25,26,27,28,29,30,42,70,90,123,125,128,131,136,140,],[41,-13,-14,-15,-16,-17,-18,-12,-27,-58,-57,-25,-19,-20,-24,-26,]),'=':([31,],[43,]),'[':([36,119,],[49,132,]),'WHILE':([41,46,],[-11,62,]),']':([41,67,98,138,141,],[-11,99,121,142,144,]),'ELSE':([41,113,],[-11,126,]),'+':([43,44,45,47,51,53,55,57,58,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,92,94,100,101,102,103,104,105,106,107,108,109,110,],[54,54,54,54,-42,77,-37,-40,54,54,54,54,54,54,54,54,54,-43,-45,-47,-48,54,54,-44,-46,54,54,54,77,77,77,77,77,77,-35,-36,-38,-39,-41,]),'-':([43,44,45,47,51,53,55,57,58,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,92,94,100,101,102,103,104,105,106,107,108,109,110,],[56,56,56,56,-42,78,-37,-40,56,56,56,56,56,56,56,56,56,-43,-45,-47,-48,56,56,-44,-46,56,56,56,78,78,78,78,78,78,-35,-36,-38,-39,-41,]),'STRING':([47,94,],[64,117,]),'*':([51,55,57,79,80,81,82,85,86,106,107,108,109,110,],[-42,83,-40,-43,-45,-47,-48,-44,-46,83,83,-38,-39,-41,]),'/':([51,55,57,79,80,81,82,85,86,106,107,108,109,110,],[-42,84,-40,-43,-45,-47,-48,-44,-46,84,84,-38,-39,-41,]),'>':([51,53,55,57,79,80,81,82,85,86,106,107,108,109,110,],[-42,71,-37,-40,-43,-45,-47,-48,-44,-46,-35,-36,-38,-39,-41,]),'<':([51,53,55,57,79,80,81,82,85,86,106,107,108,109,110,],[-42,72,-37,-40,-43,-45,-47,-48,-44,-46,-35,-36,-38,-39,-41,]),'EQ':([51,53,55,57,79,80,81,82,85,86,106,107,108,109,110,],[-42,73,-37,-40,-43,-45,-47,-48,-44,-46,-35,-36,-38,-39,-41,]),'GE':([51,53,55,57,79,80,81,82,85,86,106,107,108,109,110,],[-42,74,-37,-40,-43,-45,-47,-48,-44,-46,-35,-36,-38,-39,-41,]),'LE':([51,53,55,57,79,80,81,82,85,86,106,107,108,109,110,],[-42,75,-37,-40,-43,-45,-47,-48,-44,-46,-35,-36,-38,-39,-41,]),'NE':([51,53,55,57,79,80,81,82,85,86,106,107,108,109,110,],[-42,76,-37,-40,-43,-45,-47,-48,-44,-46,-35,-36,-38,-39,-41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,49,132,],[5,66,137,]),'funcs':([5,7,12,],[7,12,12,]),'var_ayuda':([6,8,50,],[10,14,69,]),'var_doble_ayuda':([11,22,],[16,40,]),'body':([13,33,49,66,91,126,132,137,],[18,46,67,98,113,135,138,141,]),'statements':([19,],[24,]),'statement':([19,24,],[25,42,]),'assign':([19,24,],[26,26,]),'condition':([19,24,],[27,27,]),'cycle':([19,24,],[28,28,]),'f_call':([19,24,],[29,29,]),'print':([19,24,],[30,30,]),'type':([21,48,133,],[37,65,139,]),'expression':([43,44,45,47,58,89,92,94,],[52,59,61,63,87,112,114,116,]),'exp':([43,44,45,47,58,71,72,73,74,75,76,89,92,94,],[53,53,53,53,53,100,101,102,103,104,105,53,53,53,]),'termino':([43,44,45,47,58,71,72,73,74,75,76,77,78,89,92,94,],[55,55,55,55,55,55,55,55,55,55,55,106,107,55,55,55,]),'factor':([43,44,45,47,58,71,72,73,74,75,76,77,78,83,84,89,92,94,],[57,57,57,57,57,57,57,57,57,57,57,57,57,108,109,57,57,57,]),'var_ayuda_tail':([50,],[68,]),'cte':([54,56,],[80,86,]),'f_call_ayuda':([59,112,],[88,124,]),'print_ayuda':([63,64,116,117,],[93,95,129,130,]),'funcs_ayuda':([65,139,],[96,143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID ; vars funcs MAIN body END','program',8,'p_program','parser.py',21),
  ('vars -> vars VAR var_ayuda','vars',3,'p_vars_multiple','parser.py',26),
  ('vars -> VAR var_ayuda','vars',2,'p_vars_single','parser.py',30),
  ('var_ayuda -> ID var_doble_ayuda : type ; var_ayuda_tail','var_ayuda',6,'p_var_ayuda','parser.py',34),
  ('var_ayuda_tail -> var_ayuda','var_ayuda_tail',1,'p_var_ayuda_tail','parser.py',38),
  ('var_ayuda_tail -> <empty>','var_ayuda_tail',0,'p_var_ayuda_tail_empty','parser.py',42),
  ('var_doble_ayuda -> , ID var_doble_ayuda','var_doble_ayuda',3,'p_var_doble_ayuda','parser.py',46),
  ('var_doble_ayuda -> <empty>','var_doble_ayuda',0,'p_var_doble_ayuda_empty','parser.py',50),
  ('type -> INT','type',1,'p_type_int','parser.py',55),
  ('type -> FLOAT','type',1,'p_type_float','parser.py',59),
  ('body -> { statements }','body',3,'p_body','parser.py',64),
  ('statements -> statements statement','statements',2,'p_statements_multiple','parser.py',69),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',73),
  ('statement -> assign','statement',1,'p_statement_assign','parser.py',77),
  ('statement -> condition','statement',1,'p_statement_condition','parser.py',81),
  ('statement -> cycle','statement',1,'p_statement_cycle','parser.py',85),
  ('statement -> f_call','statement',1,'p_statement_f_call','parser.py',89),
  ('statement -> print','statement',1,'p_statement_print','parser.py',93),
  ('print -> PRINT ( expression print_ayuda ) ;','print',6,'p_print_expr','parser.py',98),
  ('print -> PRINT ( STRING print_ayuda ) ;','print',6,'p_print_string','parser.py',102),
  ('print_ayuda -> , expression print_ayuda','print_ayuda',3,'p_print_ayuda_expr','parser.py',106),
  ('print_ayuda -> , STRING print_ayuda','print_ayuda',3,'p_print_ayuda_string','parser.py',110),
  ('print_ayuda -> <empty>','print_ayuda',0,'p_print_ayuda_empty','parser.py',114),
  ('cycle -> DO body WHILE ( expression ) ;','cycle',7,'p_cycle','parser.py',119),
  ('condition -> IF ( expression ) body ;','condition',6,'p_condition_if','parser.py',124),
  ('condition -> IF ( expression ) body ELSE body ;','condition',8,'p_condition_if_else','parser.py',128),
  ('assign -> ID = expression ;','assign',4,'p_assign','parser.py',133),
  ('expression -> exp > exp','expression',3,'p_expression_gt','parser.py',138),
  ('expression -> exp < exp','expression',3,'p_expression_lt','parser.py',142),
  ('expression -> exp EQ exp','expression',3,'p_expression_eq','parser.py',146),
  ('expression -> exp GE exp','expression',3,'p_expression_ge','parser.py',150),
  ('expression -> exp LE exp','expression',3,'p_expression_le','parser.py',154),
  ('expression -> exp NE exp','expression',3,'p_expression_ne','parser.py',158),
  ('expression -> exp','expression',1,'p_expression_exp','parser.py',162),
  ('exp -> exp + termino','exp',3,'p_exp_add','parser.py',167),
  ('exp -> exp - termino','exp',3,'p_exp_sub','parser.py',171),
  ('exp -> termino','exp',1,'p_exp_term','parser.py',175),
  ('termino -> termino * factor','termino',3,'p_termino_mul','parser.py',179),
  ('termino -> termino / factor','termino',3,'p_termino_div','parser.py',183),
  ('termino -> factor','termino',1,'p_termino_factor','parser.py',187),
  ('factor -> ( expression )','factor',3,'p_factor_group','parser.py',192),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',196),
  ('factor -> + ID','factor',2,'p_factor_pos_id','parser.py',200),
  ('factor -> - ID','factor',2,'p_factor_neg_id','parser.py',204),
  ('factor -> + cte','factor',2,'p_factor_pos_cte','parser.py',208),
  ('factor -> - cte','factor',2,'p_factor_neg_cte','parser.py',212),
  ('cte -> INT','cte',1,'p_cte_int','parser.py',217),
  ('cte -> FLOAT','cte',1,'p_cte_float','parser.py',221),
  ('funcs -> VOID ID ( ID : type funcs_ayuda ) [ vars body ] ;','funcs',13,'p_funcs_params','parser.py',226),
  ('funcs -> VOID ID ( ) [ vars body ] ;','funcs',9,'p_funcs_empty_params','parser.py',230),
  ('funcs -> VOID ID ( ID : type funcs_ayuda ) [ body ] ;','funcs',12,'p_funcs_params_no_vars','parser.py',234),
  ('funcs -> VOID ID ( ) [ body ] ;','funcs',8,'p_funcs_empty_params_no_vars','parser.py',238),
  ('funcs -> funcs funcs','funcs',2,'p_funcs_multiple','parser.py',242),
  ('funcs -> <empty>','funcs',0,'p_funcs_empty','parser.py',246),
  ('funcs_ayuda -> , ID : type funcs_ayuda','funcs_ayuda',5,'p_funcs_ayuda','parser.py',250),
  ('funcs_ayuda -> <empty>','funcs_ayuda',0,'p_funcs_ayuda_empty','parser.py',254),
  ('f_call -> ID ( expression f_call_ayuda ) ;','f_call',6,'p_f_call_args','parser.py',259),
  ('f_call -> ID ( ) ;','f_call',4,'p_f_call_no_args','parser.py',263),
  ('f_call_ayuda -> , expression f_call_ayuda','f_call_ayuda',3,'p_f_call_ayuda','parser.py',267),
  ('f_call_ayuda -> <empty>','f_call_ayuda',0,'p_f_call_ayuda_empty','parser.py',271),
]
