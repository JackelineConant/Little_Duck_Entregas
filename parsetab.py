
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'program( ) * + , - / : ; < = > CONST_FLOAT CONST_FLOAT CONST_INT CONST_INT CONST_STRING DO ELSE END EQ FOR GE ID IF LE MAIN NE PRINT PROGRAM STRING THEN VAR VOID WHILE [ ] { }empty :type : CONST_INTtype : CONST_FLOATvars : VAR var_ayuda\n| vars VAR var_ayudavar_ayuda : ID var_doble_ayuda ":" type ";" var_ayuda_tailvar_ayuda_tail : var_ayudavar_ayuda_tail :var_doble_ayuda : "," ID var_doble_ayudavar_doble_ayuda :exp : exp "+" terminoexp : exp "-" terminoexp : terminoexpression : exp ">" expexpression : exp "<" expexpression : exp EQ expexpression : exp GE expexpression : exp LE expexpression : exp NE expexpression : expfactor : "(" expression ")"factor : IDfactor : ctefactor : "+" IDfactor : "-" IDfactor : "+" ctefactor : "-" cteprint : PRINT "(" expression print_ayuda ")" ";"print : PRINT "(" STRING print_ayuda ")" ";"print_ayuda : "," expression print_ayudaprint_ayuda : "," STRING print_ayudaprint_ayuda :termino : termino "*" factortermino : termino "/" factortermino : factorcycle : DO body WHILE "(" expression ")" ";"condition : IF "(" expression ")" body ";"condition : IF "(" expression ")" body ELSE body ";"assign : ID "=" expression ";"f_call : ID "(" expression f_call_ayuda ")" ";"f_call : ID "(" ")" ";"f_call_ayuda : "," expression f_call_ayudaf_call_ayuda :statements : statements statementstatements : statementstatement : assignstatement : conditionstatement : cyclestatement : f_callstatement : printbody : "{" statements "}"cte : CONST_INTcte : CONST_FLOATfuncs : VOID ID "(" ID ":" type funcs_ayuda ")" "[" vars body "]" ";"funcs : VOID ID "(" ")" "[" vars body "]" ";"funcs : VOID ID "(" ID ":" type funcs_ayuda ")" "[" body "]" ";"funcs : VOID ID "(" ")" "[" body "]" ";"funcs : funcs funcsfuncs :funcs_ayuda : "," ID ":" type funcs_ayudafuncs_ayuda :program : PROGRAM ID ";" vars funcs MAIN body END'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,23,],[0,-62,]),'ID':([2,6,8,9,17,19,20,24,25,26,27,28,29,30,42,43,44,45,47,50,54,56,58,73,74,75,76,77,78,79,80,81,84,85,90,91,93,95,98,124,126,129,132,137,141,],[3,11,11,15,22,31,35,31,-45,-46,-47,-48,-49,-50,-44,51,51,51,51,11,82,86,51,-39,51,51,51,51,51,51,51,51,51,51,51,-41,51,51,121,-40,-37,-28,-29,-36,-38,]),';':([3,37,38,39,41,51,52,53,55,57,59,60,61,63,82,83,86,87,100,101,102,103,104,105,106,107,108,109,110,111,112,114,116,119,122,128,136,143,145,],[4,50,-2,-3,-51,-22,73,-20,-13,-35,-23,-52,-53,91,-24,-26,-25,-27,123,-14,-15,-16,-17,-18,-19,-11,-12,-33,-34,-21,124,126,129,132,135,137,141,146,147,]),'VAR':([4,5,10,14,49,50,69,71,72,133,138,],[6,8,-4,-5,6,-8,8,-6,-7,6,8,]),'VOID':([5,7,10,12,14,50,71,72,123,135,146,147,],[9,9,-4,9,-5,-8,-6,-7,-57,-55,-56,-54,]),'MAIN':([5,7,10,12,14,50,71,72,123,135,146,147,],[-59,13,-4,-58,-5,-8,-6,-7,-57,-55,-56,-54,]),'{':([10,13,14,33,49,50,69,71,72,92,127,133,138,],[-4,19,-5,19,19,-8,19,-6,-7,19,19,19,19,]),',':([11,22,38,39,51,53,55,57,59,60,61,62,66,67,68,82,83,86,87,101,102,103,104,105,106,107,108,109,110,111,113,117,118,140,],[17,17,-2,-3,-22,-20,-13,-35,-23,-52,-53,90,95,95,98,-24,-26,-25,-27,-14,-15,-16,-17,-18,-19,-11,-12,-33,-34,-21,90,95,95,98,]),':':([11,16,22,35,40,121,],[-10,21,-10,48,-9,134,]),'(':([15,31,32,34,43,44,45,47,58,65,74,75,76,77,78,79,80,81,84,85,90,93,95,],[20,44,45,47,58,58,58,58,58,93,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'END':([18,41,],[23,-51,]),'IF':([19,24,25,26,27,28,29,30,42,73,91,124,126,129,132,137,141,],[32,32,-45,-46,-47,-48,-49,-50,-44,-39,-41,-40,-37,-28,-29,-36,-38,]),'DO':([19,24,25,26,27,28,29,30,42,73,91,124,126,129,132,137,141,],[33,33,-45,-46,-47,-48,-49,-50,-44,-39,-41,-40,-37,-28,-29,-36,-38,]),'PRINT':([19,24,25,26,27,28,29,30,42,73,91,124,126,129,132,137,141,],[34,34,-45,-46,-47,-48,-49,-50,-44,-39,-41,-40,-37,-28,-29,-36,-38,]),')':([20,38,39,44,51,53,55,57,59,60,61,62,64,66,67,68,82,83,86,87,88,89,94,96,97,101,102,103,104,105,106,107,108,109,110,111,113,115,117,118,125,130,131,140,144,],[36,-2,-3,63,-22,-20,-13,-35,-23,-52,-53,-43,92,-32,-32,-61,-24,-26,-25,-27,111,112,116,119,120,-14,-15,-16,-17,-18,-19,-11,-12,-33,-34,-21,-43,128,-32,-32,-42,-30,-31,-61,-60,]),'CONST_INT':([21,43,44,45,47,48,54,56,58,74,75,76,77,78,79,80,81,84,85,90,93,95,134,],[38,60,60,60,60,38,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,38,]),'CONST_FLOAT':([21,43,44,45,47,48,54,56,58,74,75,76,77,78,79,80,81,84,85,90,93,95,134,],[39,61,61,61,61,39,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,39,]),'}':([24,25,26,27,28,29,30,42,73,91,124,126,129,132,137,141,],[41,-45,-46,-47,-48,-49,-50,-44,-39,-41,-40,-37,-28,-29,-36,-38,]),'=':([31,],[43,]),'[':([36,120,],[49,133,]),'WHILE':([41,46,],[-51,65,]),']':([41,70,99,139,142,],[-51,100,122,143,145,]),'ELSE':([41,114,],[-51,127,]),'+':([43,44,45,47,51,53,55,57,58,59,60,61,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,93,95,101,102,103,104,105,106,107,108,109,110,111,],[54,54,54,54,-22,80,-13,-35,54,-23,-52,-53,54,54,54,54,54,54,54,54,-24,-26,54,54,-25,-27,54,54,54,80,80,80,80,80,80,-11,-12,-33,-34,-21,]),'-':([43,44,45,47,51,53,55,57,58,59,60,61,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,93,95,101,102,103,104,105,106,107,108,109,110,111,],[56,56,56,56,-22,81,-13,-35,56,-23,-52,-53,56,56,56,56,56,56,56,56,-24,-26,56,56,-25,-27,56,56,56,81,81,81,81,81,81,-11,-12,-33,-34,-21,]),'STRING':([47,95,],[67,118,]),'*':([51,55,57,59,60,61,82,83,86,87,107,108,109,110,111,],[-22,84,-35,-23,-52,-53,-24,-26,-25,-27,84,84,-33,-34,-21,]),'/':([51,55,57,59,60,61,82,83,86,87,107,108,109,110,111,],[-22,85,-35,-23,-52,-53,-24,-26,-25,-27,85,85,-33,-34,-21,]),'>':([51,53,55,57,59,60,61,82,83,86,87,107,108,109,110,111,],[-22,74,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'<':([51,53,55,57,59,60,61,82,83,86,87,107,108,109,110,111,],[-22,75,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'EQ':([51,53,55,57,59,60,61,82,83,86,87,107,108,109,110,111,],[-22,76,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'GE':([51,53,55,57,59,60,61,82,83,86,87,107,108,109,110,111,],[-22,77,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'LE':([51,53,55,57,59,60,61,82,83,86,87,107,108,109,110,111,],[-22,78,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),'NE':([51,53,55,57,59,60,61,82,83,86,87,107,108,109,110,111,],[-22,79,-13,-35,-23,-52,-53,-24,-26,-25,-27,-11,-12,-33,-34,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,49,133,],[5,69,138,]),'funcs':([5,7,12,],[7,12,12,]),'var_ayuda':([6,8,50,],[10,14,72,]),'var_doble_ayuda':([11,22,],[16,40,]),'body':([13,33,49,69,92,127,133,138,],[18,46,70,99,114,136,139,142,]),'statements':([19,],[24,]),'statement':([19,24,],[25,42,]),'assign':([19,24,],[26,26,]),'condition':([19,24,],[27,27,]),'cycle':([19,24,],[28,28,]),'f_call':([19,24,],[29,29,]),'print':([19,24,],[30,30,]),'type':([21,48,134,],[37,68,140,]),'expression':([43,44,45,47,58,90,93,95,],[52,62,64,66,88,113,115,117,]),'exp':([43,44,45,47,58,74,75,76,77,78,79,90,93,95,],[53,53,53,53,53,101,102,103,104,105,106,53,53,53,]),'termino':([43,44,45,47,58,74,75,76,77,78,79,80,81,90,93,95,],[55,55,55,55,55,55,55,55,55,55,55,107,108,55,55,55,]),'factor':([43,44,45,47,58,74,75,76,77,78,79,80,81,84,85,90,93,95,],[57,57,57,57,57,57,57,57,57,57,57,57,57,109,110,57,57,57,]),'cte':([43,44,45,47,54,56,58,74,75,76,77,78,79,80,81,84,85,90,93,95,],[59,59,59,59,83,87,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'var_ayuda_tail':([50,],[71,]),'f_call_ayuda':([62,113,],[89,125,]),'print_ayuda':([66,67,117,118,],[94,96,130,131,]),'funcs_ayuda':([68,140,],[97,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',19),
  ('type -> CONST_INT','type',1,'p_type_int','parser.py',24),
  ('type -> CONST_FLOAT','type',1,'p_type_float','parser.py',28),
  ('vars -> VAR var_ayuda','vars',2,'p_vars','parser.py',33),
  ('vars -> vars VAR var_ayuda','vars',3,'p_vars','parser.py',34),
  ('var_ayuda -> ID var_doble_ayuda : type ; var_ayuda_tail','var_ayuda',6,'p_var_ayuda','parser.py',41),
  ('var_ayuda_tail -> var_ayuda','var_ayuda_tail',1,'p_var_ayuda_tail','parser.py',45),
  ('var_ayuda_tail -> <empty>','var_ayuda_tail',0,'p_var_ayuda_tail_empty','parser.py',49),
  ('var_doble_ayuda -> , ID var_doble_ayuda','var_doble_ayuda',3,'p_var_doble_ayuda','parser.py',53),
  ('var_doble_ayuda -> <empty>','var_doble_ayuda',0,'p_var_doble_ayuda_empty','parser.py',57),
  ('exp -> exp + termino','exp',3,'p_exp_add','parser.py',62),
  ('exp -> exp - termino','exp',3,'p_exp_sub','parser.py',66),
  ('exp -> termino','exp',1,'p_exp_term','parser.py',70),
  ('expression -> exp > exp','expression',3,'p_expression_gt','parser.py',75),
  ('expression -> exp < exp','expression',3,'p_expression_lt','parser.py',79),
  ('expression -> exp EQ exp','expression',3,'p_expression_eq','parser.py',83),
  ('expression -> exp GE exp','expression',3,'p_expression_ge','parser.py',87),
  ('expression -> exp LE exp','expression',3,'p_expression_le','parser.py',91),
  ('expression -> exp NE exp','expression',3,'p_expression_ne','parser.py',95),
  ('expression -> exp','expression',1,'p_expression_exp','parser.py',99),
  ('factor -> ( expression )','factor',3,'p_factor_group','parser.py',104),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',108),
  ('factor -> cte','factor',1,'p_factor_cte','parser.py',112),
  ('factor -> + ID','factor',2,'p_factor_pos_id','parser.py',116),
  ('factor -> - ID','factor',2,'p_factor_neg_id','parser.py',120),
  ('factor -> + cte','factor',2,'p_factor_pos_cte','parser.py',124),
  ('factor -> - cte','factor',2,'p_factor_neg_cte','parser.py',128),
  ('print -> PRINT ( expression print_ayuda ) ;','print',6,'p_print_expr','parser.py',133),
  ('print -> PRINT ( STRING print_ayuda ) ;','print',6,'p_print_string','parser.py',137),
  ('print_ayuda -> , expression print_ayuda','print_ayuda',3,'p_print_ayuda_expr','parser.py',141),
  ('print_ayuda -> , STRING print_ayuda','print_ayuda',3,'p_print_ayuda_string','parser.py',145),
  ('print_ayuda -> <empty>','print_ayuda',0,'p_print_ayuda_empty','parser.py',149),
  ('termino -> termino * factor','termino',3,'p_termino_mul','parser.py',153),
  ('termino -> termino / factor','termino',3,'p_termino_div','parser.py',157),
  ('termino -> factor','termino',1,'p_termino_factor','parser.py',161),
  ('cycle -> DO body WHILE ( expression ) ;','cycle',7,'p_cycle','parser.py',167),
  ('condition -> IF ( expression ) body ;','condition',6,'p_condition_if','parser.py',172),
  ('condition -> IF ( expression ) body ELSE body ;','condition',8,'p_condition_if_else','parser.py',176),
  ('assign -> ID = expression ;','assign',4,'p_assign','parser.py',181),
  ('f_call -> ID ( expression f_call_ayuda ) ;','f_call',6,'p_f_call_args','parser.py',186),
  ('f_call -> ID ( ) ;','f_call',4,'p_f_call_no_args','parser.py',190),
  ('f_call_ayuda -> , expression f_call_ayuda','f_call_ayuda',3,'p_f_call_ayuda','parser.py',194),
  ('f_call_ayuda -> <empty>','f_call_ayuda',0,'p_f_call_ayuda_empty','parser.py',198),
  ('statements -> statements statement','statements',2,'p_statements_multiple','parser.py',203),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',207),
  ('statement -> assign','statement',1,'p_statement_assign','parser.py',211),
  ('statement -> condition','statement',1,'p_statement_condition','parser.py',215),
  ('statement -> cycle','statement',1,'p_statement_cycle','parser.py',219),
  ('statement -> f_call','statement',1,'p_statement_f_call','parser.py',223),
  ('statement -> print','statement',1,'p_statement_print','parser.py',227),
  ('body -> { statements }','body',3,'p_body','parser.py',232),
  ('cte -> CONST_INT','cte',1,'p_cte_int','parser.py',238),
  ('cte -> CONST_FLOAT','cte',1,'p_cte_float','parser.py',242),
  ('funcs -> VOID ID ( ID : type funcs_ayuda ) [ vars body ] ;','funcs',13,'p_funcs_params','parser.py',247),
  ('funcs -> VOID ID ( ) [ vars body ] ;','funcs',9,'p_funcs_empty_params','parser.py',251),
  ('funcs -> VOID ID ( ID : type funcs_ayuda ) [ body ] ;','funcs',12,'p_funcs_params_no_vars','parser.py',255),
  ('funcs -> VOID ID ( ) [ body ] ;','funcs',8,'p_funcs_empty_params_no_vars','parser.py',259),
  ('funcs -> funcs funcs','funcs',2,'p_funcs_multiple','parser.py',263),
  ('funcs -> <empty>','funcs',0,'p_funcs_empty','parser.py',267),
  ('funcs_ayuda -> , ID : type funcs_ayuda','funcs_ayuda',5,'p_funcs_ayuda','parser.py',271),
  ('funcs_ayuda -> <empty>','funcs_ayuda',0,'p_funcs_ayuda_empty','parser.py',275),
  ('program -> PROGRAM ID ; vars funcs MAIN body END','program',8,'p_program','parser.py',281),
]
