
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'program( ) * + , - / : ; < = > CONST_FLOAT CONST_INT CONST_STRING DO ELSE END EQ FLOAT GE ID IF INT LE MAIN NE PRINT PROGRAM STRING VAR VOID WHILE [ ] { }empty :type : INTtype : FLOATvars : VAR var_ayudavar_ayuda : ID var_doble_ayuda ":" type ";" var_ayuda_tailvar_ayuda_tail : var_ayudavar_ayuda_tail : emptyvar_doble_ayuda : "," ID var_doble_ayudavar_doble_ayuda : emptyexp : exp "+" terminoexp : exp "-" terminoexp : terminoexpression : exp ">" expexpression : exp "<" expexpression : exp EQ expexpression : exp GE expexpression : exp LE expexpression : exp NE expexpression : expfactor : "(" expression ")"factor : IDfactor : ctefactor : "+" IDfactor : "-" IDfactor : "+" ctefactor : "-" cteprint : PRINT "(" expression print_ayuda ")" ";"print : PRINT "(" CONST_STRING print_ayuda ")" ";"print_ayuda : "," expression print_ayudaprint_ayuda : "," STRING print_ayudaprint_ayuda : emptytermino : termino "*" factortermino : termino "/" factortermino : factorcycle : DO body WHILE "(" expression ")" ";"condition : IF "(" expression ")" marcar_if_inicio body ";"condition : IF "(" expression ")" marcar_if_inicio  body marcar_if_final ELSE marcar_else_inicio body marcar_else_final ";"marcar_if_inicio :marcar_if_final :marcar_else_inicio :marcar_else_final :assign : ID "=" expression ";"f_call : ID "(" expression f_call_ayuda ")" ";"f_call : ID "(" ")" ";"f_call_ayuda : "," expression f_call_ayudaf_call_ayuda : emptystatements : statements statementstatements : statementstatement : assignstatement : conditionstatement : cyclestatement : f_callstatement : printbody : "{" statements "}"cte : CONST_INTcte : CONST_FLOATfunc : VOID ID "(" ID ":" type funcs_ayuda ")" func_start "[" vars body "]" ";"func : VOID ID "(" ")" func_start "[" vars body "]" ";"func : VOID ID "(" ID ":" type funcs_ayuda ")" func_start "[" body "]" ";"func : VOID ID "(" ")" func_start "[" body "]" ";"func_start : funcs_list : funcs_list funcfuncs_list : funcfuncs_list : emptyfuncs_ayuda : "," ID ":" type funcs_ayudafuncs_ayuda : emptyprogram : PROGRAM ID ";" vars funcs_list MAIN inicio_main body ENDinicio_main : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,],[0,-67,]),'ID':([2,6,10,17,20,24,32,33,34,35,36,37,38,45,47,48,49,50,52,61,63,65,76,80,81,82,83,84,85,86,87,88,91,92,97,99,101,103,133,137,140,144,146,159,],[3,12,15,22,25,39,39,-48,-49,-50,-51,-52,-53,12,-47,58,58,58,58,89,93,58,107,-42,58,58,58,58,58,58,58,58,58,58,58,-44,58,58,-43,-27,-28,-36,-35,-37,]),';':([3,27,28,29,46,58,59,60,62,64,66,67,68,70,89,90,93,94,109,110,111,112,113,114,115,116,117,118,119,120,121,125,128,131,135,136,152,154,156,158,],[4,45,-2,-3,-54,-21,80,-19,-12,-34,-22,-55,-56,99,-23,-25,-24,-26,132,-13,-14,-15,-16,-17,-18,-10,-11,-32,-33,-20,133,137,140,143,144,146,155,157,-41,159,]),'VAR':([4,54,141,],[6,6,6,]),'VOID':([5,7,8,9,11,14,45,55,56,57,132,143,155,157,],[10,10,-63,-64,-4,-62,-1,-5,-6,-7,-60,-58,-59,-57,]),'MAIN':([5,7,8,9,11,14,45,55,56,57,132,143,155,157,],[-1,13,-63,-64,-4,-62,-1,-5,-6,-7,-60,-58,-59,-57,]),'{':([11,13,19,41,45,54,55,56,57,78,100,123,141,147,150,153,],[-4,-68,24,24,-1,24,-5,-6,-7,24,-38,24,24,24,-40,24,]),',':([12,22,28,29,53,58,60,62,64,66,67,68,69,73,74,89,90,93,94,110,111,112,113,114,115,116,117,118,119,120,122,126,127,142,],[17,17,-2,-3,76,-21,-19,-12,-34,-22,-55,-56,97,103,103,-23,-25,-24,-26,-13,-14,-15,-16,-17,-18,-10,-11,-32,-33,-20,97,103,103,76,]),':':([12,16,18,22,25,30,107,],[-1,21,-9,-1,43,-8,130,]),'(':([15,39,40,42,48,49,50,52,65,72,81,82,83,84,85,86,87,88,91,92,97,101,103,],[20,49,50,52,65,65,65,65,65,101,65,65,65,65,65,65,65,65,65,65,65,65,65,]),')':([20,28,29,49,53,58,60,62,64,66,67,68,69,71,73,74,75,77,89,90,93,94,95,96,98,102,104,105,110,111,112,113,114,115,116,117,118,119,120,122,124,126,127,134,138,139,142,149,],[26,-2,-3,70,-1,-21,-19,-12,-34,-22,-55,-56,-1,100,-1,-1,106,-66,-23,-25,-24,-26,120,121,-46,125,-31,128,-13,-14,-15,-16,-17,-18,-10,-11,-32,-33,-20,-1,136,-1,-1,-45,-29,-30,-1,-65,]),'INT':([21,43,130,],[28,28,28,]),'FLOAT':([21,43,130,],[29,29,29,]),'END':([23,46,],[31,-54,]),'IF':([24,32,33,34,35,36,37,38,47,80,99,133,137,140,144,146,159,],[40,40,-48,-49,-50,-51,-52,-53,-47,-42,-44,-43,-27,-28,-36,-35,-37,]),'DO':([24,32,33,34,35,36,37,38,47,80,99,133,137,140,144,146,159,],[41,41,-48,-49,-50,-51,-52,-53,-47,-42,-44,-43,-27,-28,-36,-35,-37,]),'PRINT':([24,32,33,34,35,36,37,38,47,80,99,133,137,140,144,146,159,],[42,42,-48,-49,-50,-51,-52,-53,-47,-42,-44,-43,-27,-28,-36,-35,-37,]),'[':([26,44,106,129,],[-61,54,-61,141,]),'}':([32,33,34,35,36,37,38,47,80,99,133,137,140,144,146,159,],[46,-48,-49,-50,-51,-52,-53,-47,-42,-44,-43,-27,-28,-36,-35,-37,]),'=':([39,],[48,]),'WHILE':([46,51,],[-54,72,]),']':([46,79,108,148,151,],[-54,109,131,152,154,]),'ELSE':([46,135,145,],[-54,-39,150,]),'+':([48,49,50,52,58,60,62,64,65,66,67,68,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,101,103,110,111,112,113,114,115,116,117,118,119,120,],[61,61,61,61,-21,87,-12,-34,61,-22,-55,-56,61,61,61,61,61,61,61,61,-23,-25,61,61,-24,-26,61,61,61,87,87,87,87,87,87,-10,-11,-32,-33,-20,]),'-':([48,49,50,52,58,60,62,64,65,66,67,68,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,101,103,110,111,112,113,114,115,116,117,118,119,120,],[63,63,63,63,-21,88,-12,-34,63,-22,-55,-56,63,63,63,63,63,63,63,63,-23,-25,63,63,-24,-26,63,63,63,88,88,88,88,88,88,-10,-11,-32,-33,-20,]),'CONST_INT':([48,49,50,52,61,63,65,81,82,83,84,85,86,87,88,91,92,97,101,103,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CONST_FLOAT':([48,49,50,52,61,63,65,81,82,83,84,85,86,87,88,91,92,97,101,103,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'CONST_STRING':([52,],[74,]),'*':([58,62,64,66,67,68,89,90,93,94,116,117,118,119,120,],[-21,91,-34,-22,-55,-56,-23,-25,-24,-26,91,91,-32,-33,-20,]),'/':([58,62,64,66,67,68,89,90,93,94,116,117,118,119,120,],[-21,92,-34,-22,-55,-56,-23,-25,-24,-26,92,92,-32,-33,-20,]),'>':([58,60,62,64,66,67,68,89,90,93,94,116,117,118,119,120,],[-21,81,-12,-34,-22,-55,-56,-23,-25,-24,-26,-10,-11,-32,-33,-20,]),'<':([58,60,62,64,66,67,68,89,90,93,94,116,117,118,119,120,],[-21,82,-12,-34,-22,-55,-56,-23,-25,-24,-26,-10,-11,-32,-33,-20,]),'EQ':([58,60,62,64,66,67,68,89,90,93,94,116,117,118,119,120,],[-21,83,-12,-34,-22,-55,-56,-23,-25,-24,-26,-10,-11,-32,-33,-20,]),'GE':([58,60,62,64,66,67,68,89,90,93,94,116,117,118,119,120,],[-21,84,-12,-34,-22,-55,-56,-23,-25,-24,-26,-10,-11,-32,-33,-20,]),'LE':([58,60,62,64,66,67,68,89,90,93,94,116,117,118,119,120,],[-21,85,-12,-34,-22,-55,-56,-23,-25,-24,-26,-10,-11,-32,-33,-20,]),'NE':([58,60,62,64,66,67,68,89,90,93,94,116,117,118,119,120,],[-21,86,-12,-34,-22,-55,-56,-23,-25,-24,-26,-10,-11,-32,-33,-20,]),'STRING':([103,],[127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,54,141,],[5,78,147,]),'funcs_list':([5,],[7,]),'func':([5,7,],[8,14,]),'empty':([5,12,22,45,53,69,73,74,122,126,127,142,],[9,18,18,57,77,98,104,104,98,104,104,77,]),'var_ayuda':([6,45,],[11,56,]),'var_doble_ayuda':([12,22,],[16,30,]),'inicio_main':([13,],[19,]),'body':([19,41,54,78,123,141,147,153,],[23,51,79,108,135,148,151,156,]),'type':([21,43,130,],[27,53,142,]),'statements':([24,],[32,]),'statement':([24,32,],[33,47,]),'assign':([24,32,],[34,34,]),'condition':([24,32,],[35,35,]),'cycle':([24,32,],[36,36,]),'f_call':([24,32,],[37,37,]),'print':([24,32,],[38,38,]),'func_start':([26,106,],[44,129,]),'var_ayuda_tail':([45,],[55,]),'expression':([48,49,50,52,65,97,101,103,],[59,69,71,73,95,122,124,126,]),'exp':([48,49,50,52,65,81,82,83,84,85,86,97,101,103,],[60,60,60,60,60,110,111,112,113,114,115,60,60,60,]),'termino':([48,49,50,52,65,81,82,83,84,85,86,87,88,97,101,103,],[62,62,62,62,62,62,62,62,62,62,62,116,117,62,62,62,]),'factor':([48,49,50,52,65,81,82,83,84,85,86,87,88,91,92,97,101,103,],[64,64,64,64,64,64,64,64,64,64,64,64,64,118,119,64,64,64,]),'cte':([48,49,50,52,61,63,65,81,82,83,84,85,86,87,88,91,92,97,101,103,],[66,66,66,66,90,94,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'funcs_ayuda':([53,142,],[75,149,]),'f_call_ayuda':([69,122,],[96,134,]),'print_ayuda':([73,74,126,127,],[102,105,138,139,]),'marcar_if_inicio':([100,],[123,]),'marcar_if_final':([135,],[145,]),'marcar_else_inicio':([150,],[153,]),'marcar_else_final':([156,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',178),
  ('type -> INT','type',1,'p_type_int','parser.py',183),
  ('type -> FLOAT','type',1,'p_type_float','parser.py',187),
  ('vars -> VAR var_ayuda','vars',2,'p_vars','parser.py',192),
  ('var_ayuda -> ID var_doble_ayuda : type ; var_ayuda_tail','var_ayuda',6,'p_var_ayuda','parser.py',197),
  ('var_ayuda_tail -> var_ayuda','var_ayuda_tail',1,'p_var_ayuda_tail','parser.py',214),
  ('var_ayuda_tail -> empty','var_ayuda_tail',1,'p_var_ayuda_tail_empty','parser.py',218),
  ('var_doble_ayuda -> , ID var_doble_ayuda','var_doble_ayuda',3,'p_var_doble_ayuda','parser.py',222),
  ('var_doble_ayuda -> empty','var_doble_ayuda',1,'p_var_doble_ayuda_empty','parser.py',226),
  ('exp -> exp + termino','exp',3,'p_exp_add','parser.py',231),
  ('exp -> exp - termino','exp',3,'p_exp_sub','parser.py',239),
  ('exp -> termino','exp',1,'p_exp_term','parser.py',246),
  ('expression -> exp > exp','expression',3,'p_expression_gt','parser.py',251),
  ('expression -> exp < exp','expression',3,'p_expression_lt','parser.py',260),
  ('expression -> exp EQ exp','expression',3,'p_expression_eq','parser.py',269),
  ('expression -> exp GE exp','expression',3,'p_expression_ge','parser.py',277),
  ('expression -> exp LE exp','expression',3,'p_expression_le','parser.py',285),
  ('expression -> exp NE exp','expression',3,'p_expression_ne','parser.py',293),
  ('expression -> exp','expression',1,'p_expression_exp','parser.py',301),
  ('factor -> ( expression )','factor',3,'p_factor_group','parser.py',306),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',310),
  ('factor -> cte','factor',1,'p_factor_cte','parser.py',318),
  ('factor -> + ID','factor',2,'p_factor_pos_id','parser.py',322),
  ('factor -> - ID','factor',2,'p_factor_neg_id','parser.py',326),
  ('factor -> + cte','factor',2,'p_factor_pos_cte','parser.py',330),
  ('factor -> - cte','factor',2,'p_factor_neg_cte','parser.py',334),
  ('print -> PRINT ( expression print_ayuda ) ;','print',6,'p_print_expr','parser.py',340),
  ('print -> PRINT ( CONST_STRING print_ayuda ) ;','print',6,'p_print_string','parser.py',360),
  ('print_ayuda -> , expression print_ayuda','print_ayuda',3,'p_print_ayuda_expr','parser.py',376),
  ('print_ayuda -> , STRING print_ayuda','print_ayuda',3,'p_print_ayuda_string','parser.py',385),
  ('print_ayuda -> empty','print_ayuda',1,'p_print_ayuda_empty','parser.py',393),
  ('termino -> termino * factor','termino',3,'p_termino_mul','parser.py',399),
  ('termino -> termino / factor','termino',3,'p_termino_div','parser.py',406),
  ('termino -> factor','termino',1,'p_termino_factor','parser.py',413),
  ('cycle -> DO body WHILE ( expression ) ;','cycle',7,'p_cycle','parser.py',419),
  ('condition -> IF ( expression ) marcar_if_inicio body ;','condition',7,'p_condition_if','parser.py',424),
  ('condition -> IF ( expression ) marcar_if_inicio body marcar_if_final ELSE marcar_else_inicio body marcar_else_final ;','condition',12,'p_condition_if_else','parser.py',430),
  ('marcar_if_inicio -> <empty>','marcar_if_inicio',0,'p_marcar_if_inicio','parser.py',434),
  ('marcar_if_final -> <empty>','marcar_if_final',0,'p_marcar_if_final','parser.py',438),
  ('marcar_else_inicio -> <empty>','marcar_else_inicio',0,'p_marcar_else_inicio','parser.py',442),
  ('marcar_else_final -> <empty>','marcar_else_final',0,'p_marcar_else_final','parser.py',446),
  ('assign -> ID = expression ;','assign',4,'p_assign','parser.py',453),
  ('f_call -> ID ( expression f_call_ayuda ) ;','f_call',6,'p_f_call_args','parser.py',462),
  ('f_call -> ID ( ) ;','f_call',4,'p_f_call_no_args','parser.py',476),
  ('f_call_ayuda -> , expression f_call_ayuda','f_call_ayuda',3,'p_f_call_ayuda','parser.py',487),
  ('f_call_ayuda -> empty','f_call_ayuda',1,'p_f_call_ayuda_empty','parser.py',493),
  ('statements -> statements statement','statements',2,'p_statements_multiple','parser.py',498),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',502),
  ('statement -> assign','statement',1,'p_statement_assign','parser.py',506),
  ('statement -> condition','statement',1,'p_statement_condition','parser.py',510),
  ('statement -> cycle','statement',1,'p_statement_cycle','parser.py',514),
  ('statement -> f_call','statement',1,'p_statement_f_call','parser.py',518),
  ('statement -> print','statement',1,'p_statement_print','parser.py',522),
  ('body -> { statements }','body',3,'p_body','parser.py',527),
  ('cte -> CONST_INT','cte',1,'p_cte_int','parser.py',533),
  ('cte -> CONST_FLOAT','cte',1,'p_cte_float','parser.py',538),
  ('func -> VOID ID ( ID : type funcs_ayuda ) func_start [ vars body ] ;','func',14,'p_funcs_params','parser.py',545),
  ('func -> VOID ID ( ) func_start [ vars body ] ;','func',10,'p_funcs_empty_params','parser.py',566),
  ('func -> VOID ID ( ID : type funcs_ayuda ) func_start [ body ] ;','func',13,'p_funcs_params_no_vars','parser.py',585),
  ('func -> VOID ID ( ) func_start [ body ] ;','func',9,'p_funcs_empty_params_no_vars','parser.py',609),
  ('func_start -> <empty>','func_start',0,'p_func_start','parser.py',619),
  ('funcs_list -> funcs_list func','funcs_list',2,'p_funcs_list','parser.py',626),
  ('funcs_list -> func','funcs_list',1,'p_funcs_list_single','parser.py',630),
  ('funcs_list -> empty','funcs_list',1,'p_funcs_list_empty','parser.py',634),
  ('funcs_ayuda -> , ID : type funcs_ayuda','funcs_ayuda',5,'p_funcs_ayuda','parser.py',638),
  ('funcs_ayuda -> empty','funcs_ayuda',1,'p_funcs_ayuda_empty','parser.py',642),
  ('program -> PROGRAM ID ; vars funcs_list MAIN inicio_main body END','program',9,'p_program','parser.py',648),
  ('inicio_main -> <empty>','inicio_main',0,'p_inicio_main','parser.py',652),
]
