
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'program( ) * + , - / : ; < = > CONST_FLOAT CONST_INT CONST_STRING DO ELSE END EQ FLOAT GE ID IF INT LE MAIN NE PRINT PROGRAM STRING VAR VOID WHILE [ ] { }empty :type : INTtype : FLOATtype : STRINGvars : VAR var_ayudavar_ayuda : ID var_doble_ayuda ":" type ";" var_ayuda_tailvar_ayuda_tail : var_ayudavar_ayuda_tail : emptyvar_doble_ayuda : "," ID var_doble_ayudavar_doble_ayuda : emptyexp : exp "+" terminoexp : exp "-" terminoexp : terminoexpression : exp ">" expexpression : exp "<" expexpression : exp EQ expexpression : exp GE expexpression : exp LE expexpression : exp NE expexpression : expfactor : "(" expression ")"factor : IDfactor : ctefactor : "+" IDfactor : "-" IDfactor : "+" ctefactor : "-" cteprint : PRINT "(" expression print_ayuda ")" ";"print : PRINT "(" CONST_STRING print_ayuda ")" ";"print_ayuda : "," expression print_ayudaprint_ayuda : "," CONST_STRING print_ayudaprint_ayuda : emptytermino : termino "*" factortermino : termino "/" factortermino : factorcycle : DO marcar_cycle_inicio body marcar_cycle_final WHILE "(" expression ")" ";"marcar_cycle_inicio :marcar_cycle_final :condition : IF "(" expression ")" marcar_if_inicio body ";"condition : IF "(" expression ")" marcar_if_inicio  body marcar_if_final ELSE marcar_else_inicio body marcar_else_final ";"marcar_if_inicio :marcar_if_final :marcar_else_inicio :marcar_else_final :assign : ID "=" expression ";"f_call : ID "(" expression f_call_ayuda ")" ";"f_call : ID "(" ")" ";"f_call_ayuda : "," expression f_call_ayudaf_call_ayuda : emptystatements : statements statementstatements : statementstatement : assignstatement : conditionstatement : cyclestatement : f_callstatement : printbody : "{" statements "}"cte : CONST_INTcte : CONST_FLOATcte : CONST_STRINGfunc : VOID ID "(" ID ":" type funcs_ayuda ")" func_start "[" vars body "]" ";"func : VOID ID "(" ")" func_start "[" vars body "]" ";"func : VOID ID "(" ID ":" type funcs_ayuda ")" func_start "[" body "]" ";"func : VOID ID "(" ")" func_start "[" body "]" ";"func_start : funcs_list : funcs_list funcfuncs_list : funcfuncs_list : emptyfuncs_ayuda : "," ID ":" type funcs_ayudafuncs_ayuda : emptyprogram : PROGRAM ID ";" vars funcs_list MAIN inicio_main body ENDinicio_main : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,32,],[0,-71,]),'ID':([2,6,10,17,20,24,33,34,35,36,37,38,39,46,48,49,50,51,53,62,64,66,78,82,83,84,85,86,87,88,89,90,93,94,99,101,105,135,138,139,142,146,157,163,],[3,12,15,22,25,40,40,-51,-52,-53,-54,-55,-56,12,-50,59,59,59,59,91,95,59,109,-45,59,59,59,59,59,59,59,59,59,59,59,-47,59,-46,59,-28,-29,-39,-36,-40,]),';':([3,27,28,29,30,47,59,60,61,63,65,67,68,69,70,72,91,92,95,96,111,112,113,114,115,116,117,118,119,120,121,122,123,127,130,133,137,153,155,158,160,162,],[4,46,-2,-3,-4,-57,-22,82,-20,-13,-35,-23,-58,-59,-60,101,-24,-26,-25,-27,134,-14,-15,-16,-17,-18,-19,-11,-12,-33,-34,-21,135,139,142,145,146,157,159,161,-44,163,]),'VAR':([4,55,143,],[6,6,6,]),'VOID':([5,7,8,9,11,14,46,56,57,58,134,145,159,161,],[10,10,-67,-68,-5,-66,-1,-6,-7,-8,-64,-62,-63,-61,]),'MAIN':([5,7,8,9,11,14,46,56,57,58,134,145,159,161,],[-1,13,-67,-68,-5,-66,-1,-6,-7,-8,-64,-62,-63,-61,]),'{':([11,13,19,42,46,52,55,56,57,58,80,102,125,143,149,152,156,],[-5,-72,24,-37,-1,24,24,-6,-7,-8,24,-41,24,24,24,-43,24,]),',':([12,22,28,29,30,54,59,61,63,65,67,68,69,70,71,75,76,91,92,95,96,112,113,114,115,116,117,118,119,120,121,122,124,128,129,144,],[17,17,-2,-3,-4,78,-22,-20,-13,-35,-23,-58,-59,-60,99,105,105,-24,-26,-25,-27,-14,-15,-16,-17,-18,-19,-11,-12,-33,-34,-21,99,105,105,78,]),':':([12,16,18,22,25,31,109,],[-1,21,-10,-1,44,-9,132,]),'(':([15,40,41,43,49,50,51,53,66,83,84,85,86,87,88,89,90,93,94,99,105,126,138,],[20,50,51,53,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,138,66,]),')':([20,28,29,30,50,54,59,61,63,65,67,68,69,70,71,73,75,76,77,79,91,92,95,96,97,98,100,104,106,107,112,113,114,115,116,117,118,119,120,121,122,124,128,129,136,140,141,144,148,151,],[26,-2,-3,-4,72,-1,-22,-20,-13,-35,-23,-58,-59,-60,-1,102,-1,-1,108,-70,-24,-26,-25,-27,122,123,-49,127,-32,130,-14,-15,-16,-17,-18,-19,-11,-12,-33,-34,-21,-1,-1,-1,-48,-30,-31,-1,153,-69,]),'INT':([21,44,132,],[28,28,28,]),'FLOAT':([21,44,132,],[29,29,29,]),'STRING':([21,44,132,],[30,30,30,]),'END':([23,47,],[32,-57,]),'IF':([24,33,34,35,36,37,38,39,48,82,101,135,139,142,146,157,163,],[41,41,-51,-52,-53,-54,-55,-56,-50,-45,-47,-46,-28,-29,-39,-36,-40,]),'DO':([24,33,34,35,36,37,38,39,48,82,101,135,139,142,146,157,163,],[42,42,-51,-52,-53,-54,-55,-56,-50,-45,-47,-46,-28,-29,-39,-36,-40,]),'PRINT':([24,33,34,35,36,37,38,39,48,82,101,135,139,142,146,157,163,],[43,43,-51,-52,-53,-54,-55,-56,-50,-45,-47,-46,-28,-29,-39,-36,-40,]),'[':([26,45,108,131,],[-65,55,-65,143,]),'}':([33,34,35,36,37,38,39,48,82,101,135,139,142,146,157,163,],[47,-51,-52,-53,-54,-55,-56,-50,-45,-47,-46,-28,-29,-39,-36,-40,]),'=':([40,],[49,]),'WHILE':([47,74,103,],[-57,-38,126,]),']':([47,81,110,150,154,],[-57,111,133,155,158,]),'ELSE':([47,137,147,],[-57,-42,152,]),'+':([49,50,51,53,59,61,63,65,66,67,68,69,70,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,105,112,113,114,115,116,117,118,119,120,121,122,129,138,],[62,62,62,62,-22,89,-13,-35,62,-23,-58,-59,-60,-60,62,62,62,62,62,62,62,62,-24,-26,62,62,-25,-27,62,62,89,89,89,89,89,89,-11,-12,-33,-34,-21,-60,62,]),'-':([49,50,51,53,59,61,63,65,66,67,68,69,70,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,105,112,113,114,115,116,117,118,119,120,121,122,129,138,],[64,64,64,64,-22,90,-13,-35,64,-23,-58,-59,-60,-60,64,64,64,64,64,64,64,64,-24,-26,64,64,-25,-27,64,64,90,90,90,90,90,90,-11,-12,-33,-34,-21,-60,64,]),'CONST_INT':([49,50,51,53,62,64,66,83,84,85,86,87,88,89,90,93,94,99,105,138,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'CONST_FLOAT':([49,50,51,53,62,64,66,83,84,85,86,87,88,89,90,93,94,99,105,138,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'CONST_STRING':([49,50,51,53,62,64,66,83,84,85,86,87,88,89,90,93,94,99,105,138,],[70,70,70,76,70,70,70,70,70,70,70,70,70,70,70,70,70,70,129,70,]),'*':([59,63,65,67,68,69,70,76,91,92,95,96,118,119,120,121,122,129,],[-22,93,-35,-23,-58,-59,-60,-60,-24,-26,-25,-27,93,93,-33,-34,-21,-60,]),'/':([59,63,65,67,68,69,70,76,91,92,95,96,118,119,120,121,122,129,],[-22,94,-35,-23,-58,-59,-60,-60,-24,-26,-25,-27,94,94,-33,-34,-21,-60,]),'>':([59,61,63,65,67,68,69,70,76,91,92,95,96,118,119,120,121,122,129,],[-22,83,-13,-35,-23,-58,-59,-60,-60,-24,-26,-25,-27,-11,-12,-33,-34,-21,-60,]),'<':([59,61,63,65,67,68,69,70,76,91,92,95,96,118,119,120,121,122,129,],[-22,84,-13,-35,-23,-58,-59,-60,-60,-24,-26,-25,-27,-11,-12,-33,-34,-21,-60,]),'EQ':([59,61,63,65,67,68,69,70,76,91,92,95,96,118,119,120,121,122,129,],[-22,85,-13,-35,-23,-58,-59,-60,-60,-24,-26,-25,-27,-11,-12,-33,-34,-21,-60,]),'GE':([59,61,63,65,67,68,69,70,76,91,92,95,96,118,119,120,121,122,129,],[-22,86,-13,-35,-23,-58,-59,-60,-60,-24,-26,-25,-27,-11,-12,-33,-34,-21,-60,]),'LE':([59,61,63,65,67,68,69,70,76,91,92,95,96,118,119,120,121,122,129,],[-22,87,-13,-35,-23,-58,-59,-60,-60,-24,-26,-25,-27,-11,-12,-33,-34,-21,-60,]),'NE':([59,61,63,65,67,68,69,70,76,91,92,95,96,118,119,120,121,122,129,],[-22,88,-13,-35,-23,-58,-59,-60,-60,-24,-26,-25,-27,-11,-12,-33,-34,-21,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,55,143,],[5,80,149,]),'funcs_list':([5,],[7,]),'func':([5,7,],[8,14,]),'empty':([5,12,22,46,54,71,75,76,124,128,129,144,],[9,18,18,58,79,100,106,106,100,106,106,79,]),'var_ayuda':([6,46,],[11,57,]),'var_doble_ayuda':([12,22,],[16,31,]),'inicio_main':([13,],[19,]),'body':([19,52,55,80,125,143,149,156,],[23,74,81,110,137,150,154,160,]),'type':([21,44,132,],[27,54,144,]),'statements':([24,],[33,]),'statement':([24,33,],[34,48,]),'assign':([24,33,],[35,35,]),'condition':([24,33,],[36,36,]),'cycle':([24,33,],[37,37,]),'f_call':([24,33,],[38,38,]),'print':([24,33,],[39,39,]),'func_start':([26,108,],[45,131,]),'marcar_cycle_inicio':([42,],[52,]),'var_ayuda_tail':([46,],[56,]),'expression':([49,50,51,53,66,99,105,138,],[60,71,73,75,97,124,128,148,]),'exp':([49,50,51,53,66,83,84,85,86,87,88,99,105,138,],[61,61,61,61,61,112,113,114,115,116,117,61,61,61,]),'termino':([49,50,51,53,66,83,84,85,86,87,88,89,90,99,105,138,],[63,63,63,63,63,63,63,63,63,63,63,118,119,63,63,63,]),'factor':([49,50,51,53,66,83,84,85,86,87,88,89,90,93,94,99,105,138,],[65,65,65,65,65,65,65,65,65,65,65,65,65,120,121,65,65,65,]),'cte':([49,50,51,53,62,64,66,83,84,85,86,87,88,89,90,93,94,99,105,138,],[67,67,67,67,92,96,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'funcs_ayuda':([54,144,],[77,151,]),'f_call_ayuda':([71,124,],[98,136,]),'marcar_cycle_final':([74,],[103,]),'print_ayuda':([75,76,128,129,],[104,107,140,141,]),'marcar_if_inicio':([102,],[125,]),'marcar_if_final':([137,],[147,]),'marcar_else_inicio':([152,],[156,]),'marcar_else_final':([160,],[162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',451),
  ('type -> INT','type',1,'p_type_int','parser.py',456),
  ('type -> FLOAT','type',1,'p_type_float','parser.py',460),
  ('type -> STRING','type',1,'p_type_Str','parser.py',464),
  ('vars -> VAR var_ayuda','vars',2,'p_vars','parser.py',469),
  ('var_ayuda -> ID var_doble_ayuda : type ; var_ayuda_tail','var_ayuda',6,'p_var_ayuda','parser.py',474),
  ('var_ayuda_tail -> var_ayuda','var_ayuda_tail',1,'p_var_ayuda_tail','parser.py',492),
  ('var_ayuda_tail -> empty','var_ayuda_tail',1,'p_var_ayuda_tail_empty','parser.py',496),
  ('var_doble_ayuda -> , ID var_doble_ayuda','var_doble_ayuda',3,'p_var_doble_ayuda','parser.py',500),
  ('var_doble_ayuda -> empty','var_doble_ayuda',1,'p_var_doble_ayuda_empty','parser.py',504),
  ('exp -> exp + termino','exp',3,'p_exp_add','parser.py',509),
  ('exp -> exp - termino','exp',3,'p_exp_sub','parser.py',517),
  ('exp -> termino','exp',1,'p_exp_term','parser.py',524),
  ('expression -> exp > exp','expression',3,'p_expression_gt','parser.py',529),
  ('expression -> exp < exp','expression',3,'p_expression_lt','parser.py',536),
  ('expression -> exp EQ exp','expression',3,'p_expression_eq','parser.py',543),
  ('expression -> exp GE exp','expression',3,'p_expression_ge','parser.py',550),
  ('expression -> exp LE exp','expression',3,'p_expression_le','parser.py',557),
  ('expression -> exp NE exp','expression',3,'p_expression_ne','parser.py',564),
  ('expression -> exp','expression',1,'p_expression_exp','parser.py',571),
  ('factor -> ( expression )','factor',3,'p_factor_group','parser.py',576),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',580),
  ('factor -> cte','factor',1,'p_factor_cte','parser.py',588),
  ('factor -> + ID','factor',2,'p_factor_pos_id','parser.py',592),
  ('factor -> - ID','factor',2,'p_factor_neg_id','parser.py',596),
  ('factor -> + cte','factor',2,'p_factor_pos_cte','parser.py',600),
  ('factor -> - cte','factor',2,'p_factor_neg_cte','parser.py',604),
  ('print -> PRINT ( expression print_ayuda ) ;','print',6,'p_print_expr','parser.py',610),
  ('print -> PRINT ( CONST_STRING print_ayuda ) ;','print',6,'p_print_string','parser.py',629),
  ('print_ayuda -> , expression print_ayuda','print_ayuda',3,'p_print_ayuda_expr','parser.py',648),
  ('print_ayuda -> , CONST_STRING print_ayuda','print_ayuda',3,'p_print_ayuda_string','parser.py',656),
  ('print_ayuda -> empty','print_ayuda',1,'p_print_ayuda_empty','parser.py',664),
  ('termino -> termino * factor','termino',3,'p_termino_mul','parser.py',670),
  ('termino -> termino / factor','termino',3,'p_termino_div','parser.py',677),
  ('termino -> factor','termino',1,'p_termino_factor','parser.py',684),
  ('cycle -> DO marcar_cycle_inicio body marcar_cycle_final WHILE ( expression ) ;','cycle',9,'p_cycle','parser.py',690),
  ('marcar_cycle_inicio -> <empty>','marcar_cycle_inicio',0,'p_marcar_cycle_inicio','parser.py',694),
  ('marcar_cycle_final -> <empty>','marcar_cycle_final',0,'p_marcar_cycle_final','parser.py',698),
  ('condition -> IF ( expression ) marcar_if_inicio body ;','condition',7,'p_condition_if','parser.py',712),
  ('condition -> IF ( expression ) marcar_if_inicio body marcar_if_final ELSE marcar_else_inicio body marcar_else_final ;','condition',12,'p_condition_if_else','parser.py',718),
  ('marcar_if_inicio -> <empty>','marcar_if_inicio',0,'p_marcar_if_inicio','parser.py',722),
  ('marcar_if_final -> <empty>','marcar_if_final',0,'p_marcar_if_final','parser.py',726),
  ('marcar_else_inicio -> <empty>','marcar_else_inicio',0,'p_marcar_else_inicio','parser.py',730),
  ('marcar_else_final -> <empty>','marcar_else_final',0,'p_marcar_else_final','parser.py',734),
  ('assign -> ID = expression ;','assign',4,'p_assign','parser.py',740),
  ('f_call -> ID ( expression f_call_ayuda ) ;','f_call',6,'p_f_call_args','parser.py',749),
  ('f_call -> ID ( ) ;','f_call',4,'p_f_call_no_args','parser.py',765),
  ('f_call_ayuda -> , expression f_call_ayuda','f_call_ayuda',3,'p_f_call_ayuda','parser.py',776),
  ('f_call_ayuda -> empty','f_call_ayuda',1,'p_f_call_ayuda_empty','parser.py',783),
  ('statements -> statements statement','statements',2,'p_statements_multiple','parser.py',788),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',793),
  ('statement -> assign','statement',1,'p_statement_assign','parser.py',798),
  ('statement -> condition','statement',1,'p_statement_condition','parser.py',803),
  ('statement -> cycle','statement',1,'p_statement_cycle','parser.py',808),
  ('statement -> f_call','statement',1,'p_statement_f_call','parser.py',813),
  ('statement -> print','statement',1,'p_statement_print','parser.py',818),
  ('body -> { statements }','body',3,'p_body','parser.py',824),
  ('cte -> CONST_INT','cte',1,'p_cte_int','parser.py',830),
  ('cte -> CONST_FLOAT','cte',1,'p_cte_float','parser.py',839),
  ('cte -> CONST_STRING','cte',1,'p_cte_str','parser.py',848),
  ('func -> VOID ID ( ID : type funcs_ayuda ) func_start [ vars body ] ;','func',14,'p_funcs_params','parser.py',859),
  ('func -> VOID ID ( ) func_start [ vars body ] ;','func',10,'p_funcs_empty_params','parser.py',881),
  ('func -> VOID ID ( ID : type funcs_ayuda ) func_start [ body ] ;','func',13,'p_funcs_params_no_vars','parser.py',901),
  ('func -> VOID ID ( ) func_start [ body ] ;','func',9,'p_funcs_empty_params_no_vars','parser.py',923),
  ('func_start -> <empty>','func_start',0,'p_func_start','parser.py',941),
  ('funcs_list -> funcs_list func','funcs_list',2,'p_funcs_list','parser.py',948),
  ('funcs_list -> func','funcs_list',1,'p_funcs_list_single','parser.py',952),
  ('funcs_list -> empty','funcs_list',1,'p_funcs_list_empty','parser.py',956),
  ('funcs_ayuda -> , ID : type funcs_ayuda','funcs_ayuda',5,'p_funcs_ayuda','parser.py',960),
  ('funcs_ayuda -> empty','funcs_ayuda',1,'p_funcs_ayuda_empty','parser.py',965),
  ('program -> PROGRAM ID ; vars funcs_list MAIN inicio_main body END','program',9,'p_program','parser.py',971),
  ('inicio_main -> <empty>','inicio_main',0,'p_inicio_main','parser.py',983),
]
